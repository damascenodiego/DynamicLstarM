round(data_summ[((data_summ$Inferred==sul)&(data_summ$Reused=="N/A")),]$sd,digits = 2),
"}$",
sep="")
}
mylist<-c(mylist,paste(number,sd,sep = " "))
for(ruz in reused_lst){
content_str<-paste(data_summ[((data_summ$Inferred==sul)&(data_summ$Reused==ruz)),metric_id],"",sep="")
if(content_str==""){
mylist<-c(mylist,'-')
}else{
number<-paste("{",round(data_summ[((data_summ$Inferred==sul)&(data_summ$Reused==ruz)),metric_id],digits = 2),"}")
sd<-"";
if(data_summ[((data_summ$Inferred==sul)&(data_summ$Reused==ruz)),]$sd!=0){
sd<-paste(
"_{\\pm ",
round(data_summ[((data_summ$Inferred==sul)&(data_summ$Reused==ruz)),]$sd,digits = 2),
"}",
sep="")
}
content_str<-paste(
"$",
number,
sd,
"$",
sep="")
mylist<-c(mylist,content_str)
}
}
cat("",mylist,sep=" & ")
cat(" \\\\ ",
paste("\\cline{2-",(length(reused_lst)+3),"}",sep = "")
," \n")
}
cat("\\hline")
cat("\n")
cat("\\end{tabular}")
sink()
}
}
savePlot<-function(data,metric_id,plotdir){
colourCount = length(unique(data$Inferred))
coul = brewer.pal(12, "Paired") # My palette
getPalette = colorRampPalette(coul)
data_summ <- summarySE(data, measurevar=metric_id, groupvars=c("Inferred", "Reused"))
# data_summ[,paste(metric_id,"_Percent",sep = "")]<-0
# for(sul in unique(data_summ$Inferred)){
#   for(ruz in unique(data_summ[(data_summ$Inferred==sul),"Reused"])){
#     val_tot<-data_summ[((data_summ$Inferred==sul)& (data_summ$Reused=="N/A")),metric_id]
#     val_itm<-data_summ[((data_summ$Inferred==sul)& (data_summ$Reused==ruz)),metric_id]
#     data_summ[((data_summ$Inferred==sul)& (data_summ$Reused==ruz)),paste(metric_id,"_Percent",sep = "")]<-val_itm/val_tot
#   }
# }
# p2 <- ggplot(data=data_summ, aes_string(x="Inferred", y=metric_id, fill = "Reused")) +
#   geom_bar(colour = "black", position='dodge', stat="identity", width=0.75) +
#   geom_errorbar(aes(
#     ymin=data_summ[,metric_id]-data_summ[,"ci"], ymax=data_summ[,metric_id]+data_summ[,"ci"]
#   ), position = position_dodge(0.75),width = 0.2)+
#   theme(plot.title = element_text(hjust = 0.5),legend.box.background = element_rect(),axis.text.x = element_text(angle = 45, hjust = 1))+
#   labs(title = tab_filename)
#   # scale_fill_manual(values = c("#A9A9A9",getPalette(colourCount)))
# # scale_fill_brewer(palette="Spectral")
#
# filename <- paste(plotdir,"/",metric_id,"_",fname,out_format,sep="");ggsave(filename, width = 15, height = 5,dpi=320)
filename <- paste(plotdir,"/",metric_id,"_",fname,".tab",sep="");write.table(data_summ,filename,sep="\t",row.names=FALSE, quote=FALSE,dec=",",append=FALSE)
bplots<-list()
for(sul in unique(data$Inferred)){
reused_models<-levels(factor(unique(data[(data$Inferred==sul),"Reused"])))
reused_models<-gsub("^server_","srv_",gsub("^client_","cli_",reused_models))
p2 <- ggplot(data=data[(data$Inferred==sul),], aes_string(x="Reused", y=metric_id)) +
# geom_boxplot(outlier.colour="red", outlier.shape=8, outlier.size=4)+
geom_boxplot(outlier.shape=NA) +
scale_x_discrete(labels = reused_models)+
theme(plot.title = element_text(hjust = 0.5,size=10),
legend.position="none",
axis.text.x = element_text(angle = 45, hjust = 1,size=9),
axis.text.y = element_text(angle = 45, hjust = 1,size=9),
axis.title.x = element_blank(),
axis.title.y = element_blank()
) +
labs(title = gsub("^server_","srv_",gsub("^client_","cli_",sul)))+
coord_cartesian(ylim=c(
min(data_summ[(data_summ$Inferred==sul),metric_id]-data_summ[(data_summ$Inferred==sul),"sd"]),
max(data_summ[(data_summ$Inferred==sul),metric_id]+data_summ[(data_summ$Inferred==sul),"sd"])))
bplots[[sul]]<-p2
}
bplots[[names(bplots)[1]]] <- bplots[[names(bplots)[1]]] + theme(axis.title.y = element_text(angle = 90,size=7))
bplots[[names(bplots)[10]]] <- bplots[[names(bplots)[10]]] + theme(axis.title.y = element_text(angle = 90,size=7))
p2<-plot_grid(plotlist=bplots,nrow = 2)
filename <- paste(plotdir,"/","boxplot_",metric_id,"_",fname,".pdf",sep="");
ggsave(filename, width = 12, height = 4,dpi=320,title=paste(metric_id,"_boxplot_",fname,sep = ""))
filename <- paste(plotdir,"/","boxplot_",metric_id,"_",fname,".png",sep="");
ggsave(filename, width = 12, height = 4,dpi=320,title=paste(metric_id,"_boxplot_",fname,sep = ""))
}
args = commandArgs(trailingOnly=TRUE)
out_format<-".pdf"
list.of.suls.to.remove <- c()
list.of.suls.to.remove <- c()
logdir<-"./"; fname<-"nordsec16_server"; side <-"server"
list.of.suls.to.remove <- c(list.of.suls.to.remove,
# "server_097","server_097c","server_097e","server_098l", "server_098m", "server_098s", "server_098u","server_098za", "server_101","server_101k", "server_102", "server_110-pre1", "server_100"  #remove
)
list.of.suls.to.remove <- c(list.of.suls.to.remove
# "server_097","server_097c","server_097e","server_098l", "server_098m", "server_098s", "server_098u","server_098za", "server_101","server_101k", "server_102", "server_110-pre1", "server_100"  #remove
)
list.of.suls.to.remove <- c()
logdir<-"./"; fname<-"nordsec16_server"; side <-"server"
list.of.suls.to.remove <- c(list.of.suls.to.remove
# ,"server_097","server_097c","server_097e","server_098l", "server_098m", "server_098s", "server_098u","server_098za", "server_101","server_101k", "server_102", "server_110-pre1", "server_100"  #remove
)
tab_filename<-paste(logdir,fname,".tab",sep="")
plotdir<- paste(logdir, "plots","/",fname,sep = "")
data_srv<-loadTabAsDataFrame(tab_filename)
logdir<-"./"; fname<-"nordsec16_client"; side <-"client"
list.of.suls.to.remove <- c(list.of.suls.to.remove,"client_097","client_097e","client_098f")
tab_filename<-paste(logdir,fname,".tab",sep="")
plotdir<- paste(logdir, "plots","/",fname,sep = "")
data_cli<-loadTabAsDataFrame(tab_filename)
data<-rbind(data_srv,data_cli)
logdir<-"./"; fname<-"nordsec16_all"; side <-"all"
plotdir<- paste(logdir, "plots","/",fname,sep = "")
dir.create(file.path(plotdir), showWarnings = FALSE,recursive = TRUE)
for(sulToRm in unique(data$Inferred)){
if(length(unique(paste(data[((data$Inferred==sulToRm) & (!(data$Reused=="N/A"))),"Inferred"],data[((data$Inferred==sulToRm) & (!(data$Reused=="N/A"))),"Reused"])))==1){
data <- data[(!((data$Inferred==sulToRm))),]
}
}
View(data)
mkMwwEffSizeTexTabVert<-function(data,effsiz_tab){
sul_lst<-levels(unique(effsiz_tab$Control)); sul_lst  <- sul_lst [! (sul_lst %in% list.of.suls.to.remove)]
reused_lst<-levels(unique(effsiz_tab$Treatment)); reused_lst  <- reused_lst [! (reused_lst %in% list.of.suls.to.remove)]
for(metric_id in c("MQ_Reset","EQ_Reset","Total_Resets")){
filename <- paste(plotdir,"/",metric_id,"_",fname,"_vert.tex.tab",sep="");
data_summ <- summarySE(data, measurevar=metric_id, groupvars=c("Inferred", "Reused"))
sink(filename)
cat("SUL","Reused","p-value","Superior",paste("Effect size","\\\\ \\hline \n"),sep=" & ")
for(sul in sul_lst){
cat("\\multirow{",(length(data_summ[((data_summ$Inferred==sul)),metric_id])-1),"}{*}{",
gsub("^server_","srv\\\\_",gsub("^client_","cli\\\\_",sul))
,"}",sep=" ")
cat("\n")
for(ruz in reused_lst){
content_str<-paste(data_summ[((data_summ$Inferred==sul)&(data_summ$Reused==ruz)),metric_id],"",sep="")
if(content_str!=""){
reused_model <- gsub("^server_","srv\\\\_",gsub("^client_","cli\\\\_",ruz));
avg_value <- data_summ[((data_summ$Inferred==sul)&(data_summ$Reused==ruz)),metric_id]
p_value <- effsiz_tab[((effsiz_tab$Control==sul) & (effsiz_tab$Treatment==ruz)& (effsiz_tab$Metric==metric_id)),]$Wilcox
eff_size <- effsiz_tab[((effsiz_tab$Control==sul) & (effsiz_tab$Treatment==ruz)& (effsiz_tab$Metric==metric_id)),]$VD
superior<-"$\\mathtt{L^*_M}$"
if(eff_size<0.5){
superior<-"$\\mathtt{Dynamic~L^*_M}$"
}
eff_magn <- paste(effsiz_tab[((effsiz_tab$Control==sul) & (effsiz_tab$Treatment==ruz)& (effsiz_tab$Metric==metric_id)),]$VD.magnitude)
sig_lv<-"";
if(p_value<0.01){
sig_lv<-"**";
}else if(p_value<0.05){
sig_lv<-"*";
}
cat("",reused_model,
# format(round(avg_value, 2), nsmall = 2),
paste("$",format(round(p_value, 3), nsmall = 3),"^{~",sig_lv,"}$",sep = ""),
superior,
paste("$",
format(round(eff_size, 3), nsmall = 3),
"$ (",eff_magn,")\\\\ \\cline{2-5} \n",sep = ""),sep=" & ")
}
}
cat("\\hline")
}
sink()
}
}
mkMwwEffSizeTexTabHoriz<-function(data,effsiz_tab,to_consider){
for(metric_id in c("MQ_Reset","EQ_Reset","Total_Resets")){
filename <- paste(plotdir,"/",metric_id,"_",fname,"_horiz.tex.tab",sep="");
data_summ <- summarySE(data, measurevar=metric_id, groupvars=c("Inferred", "Reused"))
sink(filename)
cat("\\begin{tabular}{|c|")
for(sul in sul_lst){
for(ruz in reused_lst){
content_str<-paste(data_summ[((data_summ$Inferred==sul)&(data_summ$Reused==ruz)),metric_id],"",sep="")
if(content_str!=""){
cat("c|")
}
}
}
cat("}\\hline\n")
cat("SUL &")
for(sul in sul_lst){
cat(paste("\\multicolumn{",
(length(data_summ[((data_summ$Inferred==sul)),metric_id])-1)
,"}{c|}{",gsub("_","\\\\_",sul),"} &",sep=" "))
}
cat("\\hline \n")
for(sul in sul_lst){
for(ruz in reused_lst){
content_str<-paste(data_summ[((data_summ$Inferred==sul)&(data_summ$Reused==ruz)),metric_id],"",sep="")
if(content_str!=""){
cat(gsub("_","\\\\_",ruz),"& ")
}
}
}
cat("\\hline \n")
cat("\\end{tabular}")
sink()
}
}
mkAvgMeasurementsTexTab<- function(data,effsiz_tab){
sul_lst<-levels(unique(effsiz_tab$Control)); sul_lst  <- sul_lst [! (sul_lst %in% list.of.suls.to.remove)]
reused_lst<-levels(unique(effsiz_tab$Treatment)); reused_lst  <- reused_lst [! (reused_lst %in% list.of.suls.to.remove)]
for(metric_id in c("MQ_Reset","EQ_Reset","Total_Resets")){
filename <- paste(plotdir,"/",metric_id,"_",fname,".tex.tab",sep="");
data_summ <- summarySE(data, measurevar=metric_id, groupvars=c("Inferred", "Reused"))
sink(filename)
cat("\\begin{tabular}{|c|c",rep("|l",(length(reused_lst)+1)),"|}",sep = "")
cat("\n")
cat("\\cline{3-",(length(reused_lst)+3),"}\n",sep = "")
cat(
"\\multicolumn{2}{c|}{ }",
paste("\\multirow{2}{*}{","$L^*_M$","}",sep=" "),
paste("\\multicolumn{",(length(reused_lst)),"}{c|}{","Dynamic $L^*_M$","}",sep=" "),
sep = " & ")
cat("\\\\ ",paste("\\cline{4-",(length(reused_lst)+3),"}",sep = "")," \n")
cat("\\multicolumn{2}{c|}{ }","",gsub("^server_","srv\\\\_",gsub("^client_","cli\\\\_",reused_lst)),sep=" & ")
cat("\\\\ \\hline \n")
cat("\\multirow{",(length(sul_lst)),"}{*}{","SUL","}\n",sep=" ")
for(sul in sul_lst){
mylist<-c(gsub("^server_","srv\\\\_",gsub("^client_","cli\\\\_",sul)))
number<-paste("${",round(data_summ[((data_summ$Inferred==sul)&(data_summ$Reused=="N/A")),metric_id],digits = 2),"}")
sd<-"";
if(data_summ[((data_summ$Inferred==sul)&(data_summ$Reused=="N/A")),]$sd!=0){
sd<-paste(
"_{\\pm ",
round(data_summ[((data_summ$Inferred==sul)&(data_summ$Reused=="N/A")),]$sd,digits = 2),
"}$",
sep="")
}
mylist<-c(mylist,paste(number,sd,sep = " "))
for(ruz in reused_lst){
content_str<-paste(data_summ[((data_summ$Inferred==sul)&(data_summ$Reused==ruz)),metric_id],"",sep="")
if(content_str==""){
mylist<-c(mylist,'-')
}else{
number<-paste("{",round(data_summ[((data_summ$Inferred==sul)&(data_summ$Reused==ruz)),metric_id],digits = 2),"}")
sd<-"";
if(data_summ[((data_summ$Inferred==sul)&(data_summ$Reused==ruz)),]$sd!=0){
sd<-paste(
"_{\\pm ",
round(data_summ[((data_summ$Inferred==sul)&(data_summ$Reused==ruz)),]$sd,digits = 2),
"}",
sep="")
}
content_str<-paste(
"$",
number,
sd,
"$",
sep="")
mylist<-c(mylist,content_str)
}
}
cat("",mylist,sep=" & ")
cat(" \\\\ ",
paste("\\cline{2-",(length(reused_lst)+3),"}",sep = "")
," \n")
}
cat("\\hline")
cat("\n")
cat("\\end{tabular}")
sink()
}
}
savePlot<-function(data,metric_id,plotdir){
colourCount = length(unique(data$Inferred))
coul = brewer.pal(12, "Paired") # My palette
getPalette = colorRampPalette(coul)
data_summ <- summarySE(data, measurevar=metric_id, groupvars=c("Inferred", "Reused"))
# data_summ[,paste(metric_id,"_Percent",sep = "")]<-0
# for(sul in unique(data_summ$Inferred)){
#   for(ruz in unique(data_summ[(data_summ$Inferred==sul),"Reused"])){
#     val_tot<-data_summ[((data_summ$Inferred==sul)& (data_summ$Reused=="N/A")),metric_id]
#     val_itm<-data_summ[((data_summ$Inferred==sul)& (data_summ$Reused==ruz)),metric_id]
#     data_summ[((data_summ$Inferred==sul)& (data_summ$Reused==ruz)),paste(metric_id,"_Percent",sep = "")]<-val_itm/val_tot
#   }
# }
# p2 <- ggplot(data=data_summ, aes_string(x="Inferred", y=metric_id, fill = "Reused")) +
#   geom_bar(colour = "black", position='dodge', stat="identity", width=0.75) +
#   geom_errorbar(aes(
#     ymin=data_summ[,metric_id]-data_summ[,"ci"], ymax=data_summ[,metric_id]+data_summ[,"ci"]
#   ), position = position_dodge(0.75),width = 0.2)+
#   theme(plot.title = element_text(hjust = 0.5),legend.box.background = element_rect(),axis.text.x = element_text(angle = 45, hjust = 1))+
#   labs(title = tab_filename)
#   # scale_fill_manual(values = c("#A9A9A9",getPalette(colourCount)))
# # scale_fill_brewer(palette="Spectral")
#
# filename <- paste(plotdir,"/",metric_id,"_",fname,out_format,sep="");ggsave(filename, width = 15, height = 5,dpi=320)
filename <- paste(plotdir,"/",metric_id,"_",fname,".tab",sep="");write.table(data_summ,filename,sep="\t",row.names=FALSE, quote=FALSE,dec=",",append=FALSE)
bplots<-list()
for(sul in unique(data$Inferred)){
reused_models<-levels(factor(unique(data[(data$Inferred==sul),"Reused"])))
reused_models<-gsub("^server_","srv_",gsub("^client_","cli_",reused_models))
p2 <- ggplot(data=data[(data$Inferred==sul),], aes_string(x="Reused", y=metric_id)) +
# geom_boxplot(outlier.colour="red", outlier.shape=8, outlier.size=4)+
geom_boxplot(outlier.shape=NA) +
scale_x_discrete(labels = reused_models)+
theme(plot.title = element_text(hjust = 0.5,size=10),
legend.position="none",
axis.text.x = element_text(angle = 45, hjust = 1,size=9),
axis.text.y = element_text(angle = 45, hjust = 1,size=9),
axis.title.x = element_blank(),
axis.title.y = element_blank()
) +
labs(title = gsub("^server_","srv_",gsub("^client_","cli_",sul)))+
coord_cartesian(ylim=c(
min(data_summ[(data_summ$Inferred==sul),metric_id]-data_summ[(data_summ$Inferred==sul),"sd"]),
max(data_summ[(data_summ$Inferred==sul),metric_id]+data_summ[(data_summ$Inferred==sul),"sd"])))
bplots[[sul]]<-p2
}
bplots[[names(bplots)[1]]] <- bplots[[names(bplots)[1]]] + theme(axis.title.y = element_text(angle = 90,size=7))
bplots[[names(bplots)[10]]] <- bplots[[names(bplots)[10]]] + theme(axis.title.y = element_text(angle = 90,size=7))
p2<-plot_grid(plotlist=bplots,nrow = 2)
filename <- paste(plotdir,"/","boxplot_",metric_id,"_",fname,".pdf",sep="");
ggsave(filename, width = 12, height = 4,dpi=320,title=paste(metric_id,"_boxplot_",fname,sep = ""))
filename <- paste(plotdir,"/","boxplot_",metric_id,"_",fname,".png",sep="");
ggsave(filename, width = 12, height = 4,dpi=320,title=paste(metric_id,"_boxplot_",fname,sep = ""))
}
args = commandArgs(trailingOnly=TRUE)
out_format<-".pdf"
list.of.suls.to.remove <- c()
logdir<-"./"; fname<-"nordsec16_server"; side <-"server"
list.of.suls.to.remove <- c(list.of.suls.to.remove
# ,"server_097","server_097c","server_097e","server_098l", "server_098m", "server_098s", "server_098u","server_098za", "server_101","server_101k", "server_102", "server_110-pre1", "server_100"  #remove
)
tab_filename<-paste(logdir,fname,".tab",sep="")
plotdir<- paste(logdir, "plots","/",fname,sep = "")
data_srv<-loadTabAsDataFrame(tab_filename)
logdir<-"./"; fname<-"nordsec16_client"; side <-"client"
list.of.suls.to.remove <- c(list.of.suls.to.remove,"client_097","client_097e","client_098f")
tab_filename<-paste(logdir,fname,".tab",sep="")
plotdir<- paste(logdir, "plots","/",fname,sep = "")
data_cli<-loadTabAsDataFrame(tab_filename)
data<-rbind(data_srv,data_cli)
logdir<-"./"; fname<-"nordsec16_all"; side <-"all"
plotdir<- paste(logdir, "plots","/",fname,sep = "")
dir.create(file.path(plotdir), showWarnings = FALSE,recursive = TRUE)
for(sulToRm in unique(data$Inferred)){
if(length(unique(paste(data[((data$Inferred==sulToRm) & (!(data$Reused=="N/A"))),"Inferred"],data[((data$Inferred==sulToRm) & (!(data$Reused=="N/A"))),"Reused"])))==1){
data <- data[(!((data$Inferred==sulToRm))),]
}
}
calcCorrectness(data,plotdir)
data <-data[(data$Success=="OK"),]
metric_id<-"EQ_Reset"; savePlot(data,metric_id,plotdir)
metric_id<-"MQ_Reset"; savePlot(data,metric_id,plotdir)
metric_id<-"Rounds"; savePlot(data,metric_id,plotdir)
metric_id<-"Total_Resets"; savePlot(data,metric_id,plotdir)
effsiz_tab<-calcEffectSize(data)
calcEffectSize<-function(data){
effsiz_cntrl <- character()
effsiz_treat <- character()
effsiz_metr <- character()
effsiz_wilc <- numeric()
effsiz_vd <- numeric()
effsiz_vd_mag <- character()
effsiz_tab <- data.frame(effsiz_cntrl,
effsiz_treat,
effsiz_metr,
effsiz_wilc,
effsiz_vd,effsiz_vd_mag)
names(effsiz_tab) <- c("Control","Treatment","Metric",
"Wilcox",
"VD", "VD magnitude" )
reused_lst  <- levels(data$Reused)
reused_lst  <-reused_lst [! (reused_lst %in% c('N/A'))]
tab_this<-data
for(metric_id in c("MQ_Reset","EQ_Reset","Total_Resets")){
for(sul in unique(data$Inferred)){
for(reused in reused_lst){
#####################################################
control<-c(tab_this[((tab_this$Inferred==sul) & (tab_this$Reused=="N/A")),metric_id])
treatment<-c(tab_this[((tab_this$Inferred==sul) & (tab_this$Reused==reused)),metric_id])
if(length(treatment)==0) next;
# print(paste(sul,"-",reused,"-",metric_id))
wilc<-(wilcox.test(control, treatment, conf.level = 0.95))
######################
# L*M vs Dynamic L*M #
######################
d <- (c(treatment,control))
f <- c(rep(c("Treatment"),each=length(treatment)) , rep(c("Control"),each=length(control)))
## compute Vargha and Delaney
effs_vd <- (VD.A(d,f))
effsiz_tab <- rbind(effsiz_tab,data.frame(
# "Control"=paste("L*M(",sul,")",sep = ""),
# "Treatment"=paste("Dynamic L*M(",sul,", ",reused,")",sep = ""),
"Control"=sul,
"Treatment"=reused,
"Metric"=metric_id,
"Wilcox"=(as.numeric(wilc[3])),
"VD"=(effs_vd$estimate),
"VD magnitude"=effs_vd$magnitude
))
}
}
}
rownames(effsiz_tab) <- NULL
effsiz_tab$VD<-round(effsiz_tab$VD,digits = 4)
effsiz_tab$Wilcox<-round(effsiz_tab$Wilcox,digits = 3)
filename <- paste(plotdir,"/EffectSize.tab",sep="");
write.table(effsiz_tab,filename,sep="\t",row.names=FALSE, quote=FALSE,dec=",",append=FALSE)
return(effsiz_tab)
}
effsiz_tab<-calcEffectSize(data)
mkAvgMeasurementsTexTab(data,effsiz_tab)
mkMwwEffSizeTexTabVert(data,effsiz_tab)
calcEffectSize<-function(data){
effsiz_cntrl <- character()
effsiz_treat <- character()
effsiz_metr <- character()
effsiz_wilc <- numeric()
effsiz_vd <- numeric()
effsiz_vd_mag <- character()
effsiz_tab <- data.frame(effsiz_cntrl,
effsiz_treat,
effsiz_metr,
effsiz_wilc,
effsiz_vd,effsiz_vd_mag)
names(effsiz_tab) <- c("Control","Treatment","Metric",
"Wilcox",
"VD", "VD magnitude" )
reused_lst  <- levels(data$Reused)
reused_lst  <-reused_lst [! (reused_lst %in% c('N/A'))]
tab_this<-data
for(metric_id in c("MQ_Reset","EQ_Reset","Total_Resets")){
for(sul in unique(data$Inferred)){
for(reused in reused_lst){
#####################################################
control<-c(tab_this[((tab_this$Inferred==sul) & (tab_this$Reused=="N/A")),metric_id])
treatment<-c(tab_this[((tab_this$Inferred==sul) & (tab_this$Reused==reused)),metric_id])
if(length(treatment)==0) next;
# print(paste(sul,"-",reused,"-",metric_id))
wilc<-(wilcox.test(control, treatment, conf.level = 0.95))
######################
# L*M vs Dynamic L*M #
######################
d <- (c(treatment,control))
f <- c(rep(c("Treatment"),each=length(treatment)) , rep(c("Control"),each=length(control)))
## compute Vargha and Delaney
effs_vd <- (VD.A(d,f))
effsiz_tab <- rbind(effsiz_tab,data.frame(
# "Control"=paste("L*M(",sul,")",sep = ""),
# "Treatment"=paste("Dynamic L*M(",sul,", ",reused,")",sep = ""),
"Control"=sul,
"Treatment"=reused,
"Metric"=metric_id,
"Wilcox"=(as.numeric(wilc[3])),
"VD"=(effs_vd$estimate),
"VD magnitude"=effs_vd$magnitude
))
}
}
}
rownames(effsiz_tab) <- NULL
effsiz_tab$VD<-round(effsiz_tab$VD,digits = 4)
effsiz_tab$Wilcox<-round(effsiz_tab$Wilcox,digits = 4)
filename <- paste(plotdir,"/EffectSize.tab",sep="");
write.table(effsiz_tab,filename,sep="\t",row.names=FALSE, quote=FALSE,dec=",",append=FALSE)
return(effsiz_tab)
}
data<-rbind(data_cli,data_srv)
logdir<-"./"; fname<-"nordsec16_all"; side <-"all"
plotdir<- paste(logdir, "plots","/",fname,sep = "")
dir.create(file.path(plotdir), showWarnings = FALSE,recursive = TRUE)
for(sulToRm in unique(data$Inferred)){
if(length(unique(paste(data[((data$Inferred==sulToRm) & (!(data$Reused=="N/A"))),"Inferred"],data[((data$Inferred==sulToRm) & (!(data$Reused=="N/A"))),"Reused"])))==1){
data <- data[(!((data$Inferred==sulToRm))),]
}
}
calcCorrectness(data,plotdir)
data <-data[(data$Success=="OK"),]
effsiz_tab<-calcEffectSize(data)
mkAvgMeasurementsTexTab(data,effsiz_tab)
mkMwwEffSizeTexTabVert(data,effsiz_tab)
View(effsiz_tab)
effsiz_tab$VD<-round(effsiz_tab$VD,digits = 3)
list.of.suls.to.remove <- c()
logdir<-"./"; fname<-"nordsec16_server"; side <-"server"
list.of.suls.to.remove <- c(list.of.suls.to.remove
# ,"server_097","server_097c","server_097e","server_098l", "server_098m", "server_098s", "server_098u","server_098za", "server_101","server_101k", "server_102", "server_110-pre1", "server_100"  #remove
)
tab_filename<-paste(logdir,fname,".tab",sep="")
plotdir<- paste(logdir, "plots","/",fname,sep = "")
data_srv<-loadTabAsDataFrame(tab_filename)
logdir<-"./"; fname<-"nordsec16_client"; side <-"client"
list.of.suls.to.remove <- c(list.of.suls.to.remove,"client_097","client_097e","client_098f")
tab_filename<-paste(logdir,fname,".tab",sep="")
plotdir<- paste(logdir, "plots","/",fname,sep = "")
data_cli<-loadTabAsDataFrame(tab_filename)
data<-rbind(data_cli,data_srv)
calcCorrectness(data,plotdir)
logdir<-"./"; fname<-"nordsec16_all"; side <-"all"
plotdir<- paste(logdir, "plots","/",fname,sep = "")
dir.create(file.path(plotdir), showWarnings = FALSE,recursive = TRUE)
logdir<-"./"; fname<-"nordsec16_all"; side <-"all"
plotdir<- paste(logdir, "plots","/",fname,sep = "")
dir.create(file.path(plotdir), showWarnings = FALSE,recursive = TRUE)
calcCorrectness(data,plotdir)
for(sulToRm in unique(data$Inferred)){
if(length(unique(paste(data[((data$Inferred==sulToRm) & (!(data$Reused=="N/A"))),"Inferred"],data[((data$Inferred==sulToRm) & (!(data$Reused=="N/A"))),"Reused"])))==1){
data <- data[(!((data$Inferred==sulToRm))),]
}
}
calcCorrectness(data,plotdir)
